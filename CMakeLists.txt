###########################################################################
# Copyright 2015, 2016, 2017 IoT.bzh
#
# author: Fulup Ar Foll <fulup@iot.bzh>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###########################################################################


# Generate API-v2 hat from OpenAPI json definition
macro(SET_TARGET_GENSKEL TARGET_NAME API_DEF_NAME)
    add_custom_command(OUTPUT ${API_DEF_NAME}.h
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        DEPENDS ${API_DEF_NAME}.json
        COMMAND afb-genskel  ${API_DEF_NAME}.json >${API_DEF_NAME}.h 
    )
    add_custom_target(${API_DEF_NAME}_OPENAPI DEPENDS ${API_DEF_NAME}.h)
    add_dependencies(${TARGET_NAME} ${API_DEF_NAME}_OPENAPI)
endmacro(SET_TARGET_GENSKEL)

# Include LUA only when requested    
if(CONTROL_SUPPORT_LUA)
   message(STATUS "Notice: LUA Controler Support Selected")
   set(CTL_LUA_SOURCE ctl-lua.c)
endif(CONTROL_SUPPORT_LUA)

# Add target to project dependency list
PROJECT_TARGET_ADD(control-afb)

    # Define project Targets
    ADD_LIBRARY(${TARGET_NAME} MODULE ctl-binding.c ctl-timer.c ctl-dispatch.c ${CTL_LUA_SOURCE})

    # Generate API-v2 hat from OpenAPI json definition
    SET_TARGET_GENSKEL(${TARGET_NAME} ctl-apidef)

    SET_OPENAPI_FILENAME("afb-control-afb")
    # Binder exposes a unique public entry point
    SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES
	PREFIX "afb-"
        LABELS "BINDING"
	LINK_FLAGS  ${BINDINGS_LINK_FLAG}
        OUTPUT_NAME ${TARGET_NAME}
    )

    # Library dependencies (include updates automatically)
    TARGET_LINK_LIBRARIES(${TARGET_NAME}
        audio-common 
        ${link_libraries}
    )

    # installation directory
    INSTALL(TARGETS ${TARGET_NAME}
        LIBRARY DESTINATION CMAKE_INSTALL_PREFIX )

PROJECT_TARGET_ADD(audio-plugin-sample)

    # Define targets 
    ADD_LIBRARY(${TARGET_NAME} MODULE ctl-plugin-sample.c)

    # Alsa Plugin properties
    SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES
	PREFIX ${CTL_PLUGIN_PRE}
        SUFFIX ${CTL_PLUGIN_EXT}
        OUTPUT_NAME ${TARGET_NAME}
    )

    # Library dependencies (include updates automatically)
    TARGET_LINK_LIBRARIES(${TARGET_NAME}
        audio-common 
        ${link_libraries}
    )

    # installation directory
    INSTALL(TARGETS ${TARGET_NAME}
        LIBRARY DESTINATION ${BINDINGS_INSTALL_DIR}/controler)
